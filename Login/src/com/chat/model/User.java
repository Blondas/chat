package com.chat.model;

// Generated Aug 16, 2014 6:32:23 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "chat_ver1")
public class User //implements java.io.Serializable 
{

	private Integer id;
	private Gender gender;
	private String nick;
	private String firstName;
	private String lastName;
	private Integer age;
	private Boolean loggedIn;
	private Date created;
	private Date modified;
	private Set<User> usersForUserId = new HashSet<User>(0);
	private Set<Message> messages = new HashSet<Message>(0);
	private Set<User> usersForFriendId = new HashSet<User>(0);

	public User() {
	}

	public User(String firstName, String lastName, Date created) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.created = created;
	}

	public User(Gender gender, String nick, String firstName, String lastName,
			Integer age, Boolean loggedIn, Date created, Date modified,
			Set<User> usersForUserId, Set<Message> messages,
			Set<User> usersForFriendId) {
		this.gender = gender;
		this.nick = nick;
		this.firstName = firstName;
		this.lastName = lastName;
		this.age = age;
		this.loggedIn = loggedIn;
		this.created = created;
		this.modified = modified;
		this.usersForUserId = usersForUserId;
		this.messages = messages;
		this.usersForFriendId = usersForFriendId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "gender_id")
	public Gender getGender() {
		return this.gender;
	}

	public void setGender(Gender gender) {
		this.gender = gender;
	}

	@Column(name = "nick", length = 30)
	public String getNick() {
		return this.nick;
	}

	public void setNick(String nick) {
		this.nick = nick;
	}

	@Column(name = "first_name", nullable = false, length = 30)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 30)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "age")
	public Integer getAge() {
		return this.age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	@Column(name = "logged_in")
	public Boolean getLoggedIn() {
		return this.loggedIn;
	}

	public void setLoggedIn(Boolean loggedIn) {
		this.loggedIn = loggedIn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified", length = 19)
	public Date getModified() {
		return this.modified;
	}

	public void setModified(Date modified) {
		this.modified = modified;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_friend", catalog = "chat_ver1", joinColumns = { @JoinColumn(name = "friend_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "user_id", nullable = false, updatable = false) })
	public Set<User> getUsersForUserId() {
		return this.usersForUserId;
	}

	public void setUsersForUserId(Set<User> usersForUserId) {
		this.usersForUserId = usersForUserId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "message_receiver", catalog = "chat_ver1", joinColumns = { @JoinColumn(name = "receiver_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "message_id", nullable = false, updatable = false) })
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_friend", catalog = "chat_ver1", joinColumns = { @JoinColumn(name = "user_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "friend_id", nullable = false, updatable = false) })
	public Set<User> getUsersForFriendId() {
		return this.usersForFriendId;
	}

	public void setUsersForFriendId(Set<User> usersForFriendId) {
		this.usersForFriendId = usersForFriendId;
	}

}
